{"version":3,"sources":["App.js"],"names":["Tab","createBottomTabNavigator","HomeScreen","navigation","style","styles","home","source","uri","image","title","body","falseButton","onPress","navigate","FormScreen","useState","name","setName","inputContainerStyle","borderBottomWidth","alignItems","input","placeholder","onChange","event","target","value","data","id","screen","MainScreen","route","params","backgroundMain","contentContainerStyle","square","renderItem","item","squareItem","containerStyle","elevation","shadowColor","borderColor","Title","squareText","imageCard","resizeMode","numColumns","color","Breathe","background","body2","button","Timer","Hydrate","count","setCount","Motivate","visible","setVisible","isVisible","onBackdropPress","generateQuotes","quotes","randomQuotes","Math","floor","random","length","overlay","body3","Release","val","setVal","multiline","numberOfLines","textbox","type","alert","ProfileScreen","rounded","size","defaultRating","reviews","createNativeStackNavigator","StyleSheet","create","flex","justifyContent","textAlign","width","height","fontSize","fontWeight","marginTop","marginBottom","margin","backgroundColor","borderRadius","marginLeft","padding","marginRight","marginVertical","center","textAlignVertical","borderWidth","borderStyle","App","Navigator","screenOptions","tabBarButton","includes","undefined","Screen","component","options","tabBarStyle","display","headerShown","tabBarIcon"],"mappings":"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","file":"static/js/app.b7ae1ec0.chunk.js","sourcesContent":["import * as React from 'react';\n// import { Component} from 'react';\nimport { useState } from \"react\";\nimport { Text, View, TextInput, StyleSheet, Image, FlatList, TouchableOpacity, ImageBackground, Button, Pressable, SafeAreaView, Alert } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { Input, Card, Overlay, AirbnbRating, Avatar } from \"react-native-elements\";\nimport { createBottomTabNavigator, BottomTabBar } from '@react-navigation/bottom-tabs';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\n\n\nconst Tab = createBottomTabNavigator();\n\n// Home Screen\nfunction HomeScreen ( {navigation} ) {\n\n  const image = {uri: 'https://www.linkpicture.com/q/homebg.jpg'};\n\n  return (\n    <View style={styles.home}>\n      <ImageBackground source= {image} style={styles.image}>\n        <Text style={styles.title}>F L O A T</Text>\n        <Text style={styles.body}>Let your worries float away with the waves.</Text>\n        <TouchableOpacity>\n            <Text style={styles.falseButton} onPress={() => navigation.navigate('Form')}>\n               Hello!\n            </Text>\n        </TouchableOpacity>\n      </ImageBackground>\n    </View>\n  );\n}\n\n    // Form Screen\n    function FormScreen ( {navigation} ) {\n      const [name, setName] = useState('')\n      const image = {uri: 'https://www.linkpicture.com/q/homebg.jpg'};\n\n      return (\n        <View style={styles.home}>\n            <ImageBackground source= {image} style={styles.image}>\n            <Text style={styles.body}> Before we begin. What's your name?</Text>\n            <Input inputContainerStyle={{borderBottomWidth:0, alignItems: 'center'}} style={styles.input} \n              placeholder=\"Enter Name\"\n              // minLength={1}\n              // errorMessage=\"Oops! that's not correct.\"\n              // renderErrorMessage\n              onChange={event => setName(event.target.value)}\n            />\n              <TouchableOpacity>\n              <Text style={styles.falseButton} onPress={() => navigation.navigate('Activities', {name:name})}>\n                    Enter\n              </Text>\n              </TouchableOpacity>\n            </ImageBackground>\n      </View>\n\n      );\n      \n    }\n\n\n// Main Screen\nconst data = [\n  {\n  id: \"1\",\n  title: \"BREATHE\",\n  image: \"https://www.linkpicture.com/q/break_1.jpg\",\n  screen: \"Breathe\"\n},\n{\n  id: \"2\",\n  title: \"HYDRATE\",\n  image: \"https://www.linkpicture.com/q/hydrate_1.jpg\",\n  screen: \"Hydrate\"\n},\n{\n  id: \"3\",\n  title: \"MOTIVATE\",\n  image: \"https://www.linkpicture.com/q/motivation_1.jpg\",\n  screen: \"Motivate\"\n},\n{\n  id: \"4\",\n  title: \"RELEASE\",\n  image: \"https://www.linkpicture.com/q/release_4.jpg\",\n  screen: \"Release\"\n}\n];\n\nconst grid = (data) => {\nreturn data;\n\n};\n\nconst numColumns = 2;\n\nfunction MainScreen ( {navigation, route} ){\n  const { name } = route.params;\nlet renderItem = ({item}) => {\n    return (\n        <View style={styles.squareItem}>\n          {/* <SafeAreaView> */}\n          {/* <ScrollView> */}\n            <TouchableOpacity onPress={() => navigation.navigate(item.screen,\n              {\n                title: item.title,\n                image: item.image,\n                name: name,\n                // data: data\n              })}>\n              <Card containerStyle={{ elevation: 0, shadowColor: \"white\", borderColor: \"white\" }}>\n              <Card.Title style={styles.squareText}>{item.title}</Card.Title>\n              <Image style={styles.imageCard} resizeMode=\"contain\"\n                source={{\n                  uri: item.image\n                }}\n              />\n              </Card>\n            </TouchableOpacity>\n            {/* </ScrollView> */}\n          {/* </SafeAreaView> */}\n        </View>\n    );\n  };\n    return (\n      <View style={styles.backgroundMain}>\n        {/* <SafeAreaView> */}\n        {/* <ScrollView> */}\n          {/* here */}\n          <Text style={styles.title}>Welcome {name}!</Text>\n          {/* here */}\n          <FlatList\n            data={grid(data, numColumns)}\n            contentContainerStyle={styles.square}\n            renderItem={renderItem}\n            numColumns={numColumns}\n            \n          />\n        <Button color='#6076aa' title=\"Profile\" onPress={() => navigation.navigate('Profile', {name:name})}/>\n\n          {/* </ScrollView> */}\n        {/* </SafeAreaView> */}\n      </View>\n    );\n  }\n  \n// BREATHE SCREEN\nfunction Breathe ( {route, navigation} ) {\n  const { title, image, name } = route.params;\n  \n  // const [count, setCount] = useState(0);\n\n  return (\n    <View style={styles.background}>\n      {/* <SafeAreaView> */}\n        <Text style={styles.title}>{title}</Text>\n        <Text style={styles.body2}>It's important to take time to sit and take a break from reality now and then.</Text>\n        <Text style={styles.body}>Select one of the options below and set up time to yourself.</Text>\n        <Image style={styles.imageCard} resizeMode=\"contain\" source={{uri: image}}/>\n        {/* working */}\n\n        {/* <Text style={styles.body} id=\"counter\">Time Left: {secs}</Text> */}\n\n        {/* working */}\n        <View style={styles.button}>\n          <Button color='#f1c47f' title=\"10 Minute\" id=\"timefun\" onPress={() => Timer()}/>\n        </View>\n        <View style={styles.button}>\n        <Button color='#6076aa' title=\"Home\" onPress={() => navigation.navigate('Activities', {name:name})}/>\n        </View>\n      {/* </SafeAreaView> */}\n    </View>\n  );\n}\n\n  // usePrev\n    // function usePrevious(value) {\n    //   const ref = useRef();\n    //   useEffect(() => {\n    //     ref.current = value;\n    //   });\n    //   return ref.current;\n    // }\n\n  //  timers function\n    // function Timer (props) {\n    //   constructor(props) {\n    //     super(props)\n    //     this.state = { time: props.seconds, complete: false, interval: undefined }\n    //   }\n    \n    //    componentDidMount() {\n    //     this.setState({\n    //       interval: setInterval(() => {\n    //         if (this.state.time > 0) {\n    //           this.setState({ time: this.state.time - 1})\n    //         } else {\n    //           this.setState( {complete:true} )\n    //           clearInterval(this.state.interval)\n    //         }\n    //       }\n    //       , 1000)\n    //     })\n    //   }\n        // let minutes = Math.floor(this.state.time / 60)\n        // let seconds = this.state.time - minutes * 60\n        // return (\n        //   <View>\n        //   {!this.state.complete ?\n        //     <Text style={styles.body}> \n        //       You have\n        //       {String(minutes).padStart(2, 0)}:{String(seconds).padStart(2, \"0\")}\n        //       seconds left.\n        //     </Text>\n        //     :\n        //     <Text style={styles.body}>Mindful cycle complete.</Text>\n        //   }\n        //   </View>\n        // );\n    \n  \n\n// HYDRATE SCREEN\nfunction Hydrate ({route, navigation}) {\n  const { title, image, name } = route.params;\n  const [count, setCount] = useState(0);\n  const noNegatives = () => {\n    if (count < 1) {\n      return;\n    } else {\n      setCount(count - 1);\n    }\n  }\n  return (\n    <View style={styles.background}>\n      {/* <SafeAreaView> */}\n      <Text style={styles.title}>{title}</Text>\n      <Text style={styles.body2}>It's easy to forget to drink water whenever we're stressed or not feeling the best.</Text>\n      <Text style={styles.body}>How Many Bottles of Water Have You Had Today?</Text>\n      <Image style={styles.imageCard} resizeMode=\"contain\"source={{uri: image}}/>\n      <Text style={styles.body}>{count}</Text>\n      <View style={styles.button}>\n        <Button color='#f1c47f' title=\"Add\" onPress={() => setCount(count + 1)}/>\n      </View>\n      <View style={styles.button}>\n        <Button color='#f1c47f' style={styles.button}title=\"Remove\" onPress={noNegatives}/>\n      </View>\n      <View style={styles.button}>\n        <Button color='#f1c47f' title=\"Reset\" onPress={() => setCount(0)}/>\n      </View>\n      <View style={styles.button}>\n        <Button color='#6076aa' title=\"Home\" onPress={() => navigation.navigate('Activities', {name:name})}/>\n      </View>\n      {/* </SafeAreaView> */}\n    </View>\n \n  );\n  \n}\n\n// MOTIVATE SCREEN\nfunction Motivate ( {route, navigation} ) {\n  const { title, image, name } = route.params;\n  const [visible, setVisible] = useState(false);\n  const onPress = () => setVisible(!visible)\n  return (\n    <View style={styles.background}>\n      {/* <SafeAreaView> */}\n        <Text style={styles.title}>{title}</Text>\n        <Text style={styles.body2}>Sometimes we need some inspiration to keep us going.</Text>\n        <Text style={styles.body}>Take a look at some of these quotes.</Text>\n        <Image style={styles.imageCard} resizeMode=\"contain\" source={{uri: image}}/>\n        <View style={styles.button}>\n          <Button color='#f1c47f' title=\"Generate\" onPress={onPress}/>\n          <Overlay isVisible={visible} onBackdropPress={onPress}>\n            <Text>{generateQuotes()}</Text>\n          </Overlay>\n        </View>\n        <View style={styles.button}>\n        <Button color='#6076aa' title=\"Home\" onPress={() => navigation.navigate('Activities', {name:name})}/>\n        </View>\n      {/* </SafeAreaView> */}\n    </View>\n  );\n}\n    // generating random quotes function\n    function generateQuotes() {\n\n      const quotes = \n        ['\"Almost everything will work again if you unplug it for a few minutes, including you.\" — Anne Lamott',\n        '\"Until you value yourself, you won’t value your time. Until you value your time, you will not do anything with it.\" — M. Scott Peck',\n        '\"Within you, there is a stillness and a sanctuary to which you can retreat at any time and be yourself.\" — Hermann Hesse',\n        '\"It is not the mountain we conquer but ourselves.\" — Sir Edmund Hillary',\n        '\"It’s all about falling in love with yourself and sharing that love with someone who appreciates you, rather than looking for love to compensate for a self-love deficit.\" — Eartha Kitt',\n        '\"Grab a coffee. Journal your intentions. Get to work. Create miracles.\" — Elyse Santilli',\n        '\"To accept ourselves as we are means to value our imperfections as much as our perfections.\" — Sandra Bierig',\n        '\"Loving yourself isn’t vanity. It’s sanity.\" — Katrina Mayer',\n        '\"Never bend your head. Always hold it high. Look the world straight in the face.\" — Helen Keller',\n        '\"You have to believe in yourself when no one else does—that makes you a winner right there.\" — Venus Williams',\n        '\"You find peace not by rearranging the circumstances of your life, but by realizing who you are at the deepest level.\" — Eckhart Tolle',\n        '\"Part of courage is simple consistency.\" — Peggy Noonan',\n        '\"Breathe. Let go. And remind yourself that this very moment is the only one you know you have for sure.\" — Oprah Winfrey',\n        '\"Our bodies are our gardens, to which our wills are gardeners.\" — William Shakespeare',\n        '\"You are magnificent beyond measure, perfect in your imperfections, and wonderfully made.\" — Abiola Abrams',\n        '\"As you grow older, you will discover that you have two hands, one for helping yourself, the other for helping others.\" — Maya Angelou',\n        '\"Self-care means giving yourself permission to pause.\" — Cecilia Tran',\n        '\"When you recover or discover something that nourishes your soul and brings joy, care enough about yourself to make room for it in your life.\" — Jean Shinoda Bolen',\n        '\"Be patient with yourself. Self-growth is tender; it’s holy ground. There’s no greater investment.\" — Stephen Covey',\n        '\"Keep good company, read good books, love good things, and cultivate soul and body as faithfully as you can.\" — Louisa May Alcott',\n        ];\n      const randomQuotes = quotes[Math.floor(Math.random()*quotes.length)];\n      return(\n        <View style={styles.overlay}>\n          <Text style={styles.body3}>{randomQuotes}</Text>\n        </View>\n      );\n    }\n\n// RELEASE SCREEN\nfunction Release ( {route, navigation} ) {\n  const { title, image, name } = route.params;\n  const [val, setVal] = useState();\n\n  return (\n    <View style={styles.background}>\n        <Text style={styles.title}>{title}</Text>\n        <Text style={styles.body2}>Pent up feelings cause emotional baggage which negatively affects our loved ones and selves.</Text>\n        <Text style={styles.body}>Write down everything that's been worrying you.</Text>\n        <Image style={styles.imageCard} resizeMode=\"contain\" source={{uri: image}}/>\n        <TextInput\n          multiline={true}\n          numberOfLines={10}\n          style={styles.textbox}\n          type=\"text\" \n          value={val}\n          />\n        <Text style={styles.body2}>Now hit send off to get rid of these emotions.</Text>\n        <Text style={styles.body2}>Don't worry everything will be deleted.</Text>\n        <View style={styles.button}>\n          <Button color='#f1c47f' title=\"Send Off\" onPress={() => setVal(() => \"\",\n          alert(\"Your worries have drifted away...\"))}/>\n        </View>\n        <View style={styles.button}>\n        <Button color='#6076aa' title=\"Home\" onPress={() => navigation.navigate('Activities', {name:name})}/>\n        </View>\n    </View>\n  );\n}\n\n// Profile Screen\nfunction ProfileScreen ({route, navigation} ) {\n  const { name } = route.params;\n  return (\n    <View style={styles.background}>\n      <SafeAreaView style={styles.background}>\n        <Text style={styles.title}> Welcome to your profile, {name}</Text>\n        <Avatar \n          rounded\n          size=\"large\"\n          source={{\n            uri:\n              \"https://cdn2.iconfinder.com/data/icons/social-media-flat-line/70/user-512.png\"\n          }}\n        />\n        <Text style={styles.body2}>Rate your mood:</Text>\n        <AirbnbRating\n        count={5}\n        defaultRating={1}\n        reviews={[\n          \"Terrible\",\n          \"Bad\",\n          \"Okay\",\n          \"Good\",\n          \"Great\"\n        ]} \n        />\n        <Button color='#6076aa' title=\"Home\" onPress={() => navigation.navigate('Activities', {name:name})}/>\n\n      </SafeAreaView>\n    </View>\n  );\n};\n\nconst Stack = createNativeStackNavigator();\n\n\nfunction App () {\n  return (\n    <NavigationContainer>\n      {/* used to hide extra screens */}\n      <Tab.Navigator screenOptions={({ route }) => ({\n        tabBarButton: [\n          \"Form\",\n          \"Breathe\",\n          \"Hydrate\",\n          \"Motivate\",\n          \"Release\"\n        ].includes(route.name)\n          ? () => {\n              return null;\n            }\n          : undefined,\n      })}>\n        {/* shown */}\n        <Tab.Screen name=\"Home\" component={HomeScreen}\n          options={{\n            tabBarStyle: { display: \"none\" },\n            headerShown: false,\n            tabBarIcon: () => <MaterialCommunityIcons name=\"home\" size={30}/>\n          }}\n        />\n        <Tab.Screen name=\"Activities\" component={MainScreen} \n          options={{\n            headerShown: false,\n            tabBarIcon: () => <MaterialCommunityIcons name=\"compass\" size={30} />,\n          }}\n        />\n        <Tab.Screen\n          name=\"Profile\" component={ProfileScreen} options={{\n            headerShown: false,\n            tabBarIcon: () => <MaterialCommunityIcons name=\"account\" size={30} />,\n          }}\n        />\n        {/* hidden */}\n        <Tab.Screen name=\"Form\" component={FormScreen}\n          options={{\n            tabBarStyle: { display: \"none\" },\n            headerShown: false \n          }}\n        />\n        <Tab.Screen name=\"Breathe\" component={Breathe} options={{\n          headerShown: false,\n          }}\n        />\n        <Tab.Screen name=\"Hydrate\" component={Hydrate} options={{\n          headerShown: false,\n          }}\n        />\n        <Tab.Screen name=\"Motivate\" component={Motivate} options={{\n          headerShown: false,\n          }}\n        />\n        <Tab.Screen name=\"Release\" component={Release} options={{\n          headerShown: false,\n          }}\n        />\n\n      </Tab.Navigator>\n      {/* <Timer seconds={90}/> */}\n    </NavigationContainer>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  home: {\n    flex: 1, \n    justifyContent: 'center', \n    textAlign: 'center',\n  },\n  image: {\n    flex: 1,\n    justifyContent: \"center\",\n  },\n  imageCard: {\n    width: \"100%\", \n    height: 100,\n  },\n  title: {\n    fontSize: 40,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  body: {\n    fontSize: 20,\n    color: 'white',\n    marginTop: 20,\n    marginBottom: 20,\n  },\n  body2: {\n    fontSize: 17,\n    color: 'white',\n    marginTop: 20,\n    marginBottom: 0,\n  },\n  body3: {\n    fontSize: 17,\n    color: 'black',\n    margin: 20,\n  },\n  falseButton: {\n    backgroundColor: 'white',\n    width: \"25%\",\n    borderRadius: 25,\n    textAlign: 'center',\n    fontWeight: 'bold',\n    marginLeft: '37%',\n    padding: \"2%\",\n    fontSize:  20,\n    marginTop: '10%'\n  },\n  button: {\n    borderRadius: 25,\n    width: 100,\n    marginRight: '39%',\n    marginLeft: '39%',\n    marginVertical: '1%',\n   },\n  // avatar: {\n  //   alignItems: 'center'\n  // },\n  background: {\n    flex: 1, \n    width: \"100%\",\n    justifyContent: 'center', \n    textAlign: 'center',\n    backgroundColor: '#7595E0',\n    alignItems: 'center'\n  },\n  center: {\n    alignItems: 'center'\n  },\n  backgroundMain: {\n    flex: 1, \n    width: \"100%\",\n    justifyContent: 'center', \n    textAlign: 'center',\n    backgroundColor: '#7595E0'\n  },\n  input: {\n    backgroundColor: 'white',\n    borderRadius: 25,\n    textAlign: 'center',\n    padding: 10,\n    marginTop: 20,\n    marginLeft: '30%',\n    marginRight: '30%'\n  },\n  textbox: {\n    backgroundColor: 'white',\n    borderRadius: 25,\n    padding: 10,\n    marginTop: 20,\n    marginLeft: '20%',\n    marginRight: '20%',\n    height:200, \n    width: 400,\n    textAlignVertical: 'top',\n    alignItems: 'center'\n  },\n  // grid styling\n  square: {\n    flex: 1,\n    marginVertical: \"25%\",\n    margin: 60,\n    marginTop: 50\n  },\n  squareItem: {\n    backgroundColor: 'white',\n    borderWidth:  3,  \n    borderStyle:  'solid',\n    borderColor: '#6076aa',\n    borderRadius: 15,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n    margin: 15,\n    width: 10,\n  },\n  squareText: {\n    fontSize: 20,\n    color: '#7595E0',\n    fontWeight: 'bold',\n    margin: 20,\n    alignItems: 'center'\n  },\n  overlay: {\n    backgroundColor:'#D3D3D3',\n    width: \"25%\",\n    alignItems: 'center',\n    textAlign: 'center',\n    justifyContent: 'center',\n    marginLeft: '38%',\n    marginRight: '41%',\n  }\n});\n\n\nexport default App;\n"],"sourceRoot":""}